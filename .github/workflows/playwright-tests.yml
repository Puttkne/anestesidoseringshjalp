name: Playwright Tests

on:
  push:
    branches: [ main, master, dev ]
  pull_request:
    branches: [ main, master, dev ]
  workflow_dispatch:

jobs:
  test:
    timeout-minutes: 15
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Install Node dependencies
      run: npm ci

    - name: Install Playwright Browsers
      run: npx playwright install --with-deps chromium

    - name: Start Streamlit App
      run: |
        python -m streamlit run oxydoseks.py --server.port 8501 --server.headless true &
        sleep 10
      env:
        STREAMLIT_SERVER_HEADLESS: true

    - name: Wait for app to be ready
      run: |
        timeout 30 bash -c 'until curl -s http://localhost:8501 > /dev/null; do sleep 2; done'

    - name: Run Playwright tests
      run: npx playwright test --workers=2
      continue-on-error: false

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30

    - name: Upload test videos
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: test-videos
        path: test-results/
        retention-days: 7

    - name: Publish Test Report
      uses: daun/playwright-report-action@v3
      if: always()
      with:
        report-path: playwright-report/
        github-token: ${{ secrets.GITHUB_TOKEN }}

  notify:
    needs: test
    runs-on: ubuntu-latest
    if: always()

    steps:
    - name: Test Success Notification
      if: needs.test.result == 'success'
      run: echo "✅ All tests passed successfully!"

    - name: Test Failure Notification
      if: needs.test.result == 'failure'
      run: echo "❌ Some tests failed. Check the report for details."
